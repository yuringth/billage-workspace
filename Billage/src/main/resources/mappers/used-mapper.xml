<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
"-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="usedMapper">


	<resultMap id="usedResultSet" type="used">
		<result column="USED_NO"        property="usedNo" />
		<result column="USER_NO"		property="userNo" />
		<result column="USED_TITLE"		property="usedTitle" />
		<result column="USED_CONTENT"	property="usedContent" />
		<result column="CREATE_DATE"	property="createDate" />
		<result column="USED_STATUS"	property="usedStatus" />
		<result column="COUNT"		    property="count" />
		<result column="POINT"		    property="point" />
		<result column="STOCK_STATUS"	property="stockStatus" />
		<result column="BOOK_GENRE"		property="bookGenre" />
		<result column="BOOK_AUTHOR"	property="bookAuthor" />
		<result column="BOOK_TITLE"	    property="bookTitle" />
		<result column="ORIGIN_NAME"	property="originName" />
		<result column="CHANGE_NAME"	property="changeName" />
	</resultMap>



	<!-- 글작성 -->
	<insert id="insertUsedBoard" parameterType="used">
		insert
		  into
		  	   used_board
		       (
		       used_no
		      ,user_no
		      ,used_title
		      ,book_author
		      ,book_genre
		      ,point
		      ,book_title
		      ,used_content
		      ,origin_name
		      ,change_name
		      ,stock_status
		       )
		values
			   (
			   seq_useno.nextval
			  ,#{userNo}
			  ,#{usedTitle}
			  ,#{bookAuthor}
			  ,#{bookGenre}
			  ,#{point}
			  ,#{bookTitle}
			  ,#{usedContent}
			  ,#{originName}
			  ,#{changeName}
			  ,#{stockStatus} <!-- 기본값 N -->
			   )
	</insert>
	

	
	<!-- 게시글의 총 개수 조회(모든 행 조회) -->
	<select id="selectListUsedCount" resultType="_int">
		select
		       count(*)
		  from
		       used_board
		 where
		       used_status = 'N'  
	</select>
		
		
		
	<!-- 게시판 list 조회 -->
	<select id="usedBoardList" resultMap="usedResultSet">
		select
			    used_no
		       ,user_no
	           ,nickname
		       ,used_title
		       ,used_content
		       ,book_author
		       ,book_genre
		       ,point
		       ,book_title
		       ,stock_status
		       ,count 
		       ,to_char(create_date, 'YYYY-MM-DD') as "CREATE_DATE"
		       ,origin_name 
		       ,change_name
		       ,stock_status
		  from
		       used_board
	      join
	           member using(user_no)
	           
		 where
		 	   used_status = 'N'
		 order
		    by
		       used_no desc
	</select>
	
	
	
	<!-- 조회수 증가 -->
	<update id="increaseUsedCount" parameterType="_int">
		update
		       used_board
		   set
		       count = count + 1
		 where
		       used_status = 'N'
		   and
		       used_no = ${ usedNo } 
	</update>
	
	
	
	<!-- 게시글 상세 조회 => DB에서 정보 가져 오기  -->
	<select id="selectUsedBoard" resultMap="usedResultSet">
		select
			    used_no
		       ,user_no
	           ,nickname
		       ,used_title
		       ,used_content
		       ,to_char(create_date, 'YYYY-MM-DD') as "create_date"
		       ,count 
		       ,point
		       ,stock_status
		       ,book_genre
		       ,book_author
		       ,book_title
		       ,origin_name 
		       ,change_name
		  from
		       used_board
	      join
	           member using(user_no)
		 where
		 	   used_status = 'N'
		   and
 			   used_no = ${ usedNo }		     
	</select>
	
	
	
	<!-- 게시글 삭제 -->
	<update id="deleteUsedBoard" parameterType="_int">
		update
		       used_Board
		   set
		       used_status = 'Y'
		 where
		       used_no = #{usedNo}
	</update>



	<!-- 게시글 수정버튼 클릭 시 => 게시판 번호를 식별자로 DB에서 게시글 정보 select해서 가져오기  -->
	<select id="selectUpdateUsedBoard" parameterType="used" resultMap="usedResultSet">
		select
		        used_no
		       ,user_no
		       ,used_title
		       ,used_content
		       ,create_date
		       ,to_char(create_date, 'YYYY-MM-DD') as "create_date"
		       ,point
		       ,book_genre
		       ,book_author
		       ,book_title
		       ,origin_name
		       ,change_name
		       ,stock_status
		  from
		       used_board
		 where
		       used_no = #{usedNo}
		   and
		       used_status = 'N'
	</select>

	
	
	<!-- 글수정 -->
	<update id="usedUpdate" parameterType="used">
		update
		       used_Board
		   set
		        used_title = #{usedTitle}
		       ,book_author = #{bookAuthor}
		       ,book_genre = #{bookGenre}
		       ,point = #{point}
		       ,change_name = #{changeName}
		       ,origin_name = #{originName}
		       ,book_title = #{bookTitle}
		       ,used_content = #{usedContent}
		 where
		       used_no = #{usedNo}
	</update>
	
	
	
	<!-- Top-N분석 -->
	<select id="selectTopUsed" resultMap="usedResultSet">
		select
		     *
		  from(select
		               user_no
				      ,used_no
				      ,book_title
				      ,point
				      ,count
				      ,to_char(create_date, 'YYYY-MM-DD') as "create_date"
				      ,origin_name
				      ,change_name
				  from
				       used_board
				 where
				       used_status = 'N'
                   and
                       stock_status = 'N'
				 order
				    by
				       count desc)
		  where
		        rownum between 1 and 4
	</select>
	
	
	
	<!-- 검색 기능 : 검색 결과에 맞는 게시글의 총 개수-->
	<select id="selectSearchCount" parameterType="hashmap" resultType="_int">
		select 
		       count(*)
		  from
		       used_board
		  join
		       member using(user_no)
		 where
		       used_status = 'N'
		 <if test="condition == 'nickname'">
		 	and nickname
		 </if>
		 <if test="condition == 'bookTitle'">
		    and book_title
		 </if>
		 <if test="condition == 'usedContent'">
		    and used_content
		 </if>   
		    like '%' || #{keyword} || '%'
	</select>
	
	
	
	<!-- 검색 기능 : 검색 결과에 맞는 게시글 데이터 -->
	<select id="selectSearchList" parameterType="hashmap" resultMap="usedResultSet">
		select
		        stock_status
		       ,change_name
		       ,book_title
		       ,point
		       ,count
		       ,used_no
		       ,user_no
		  from
		       used_board
		  join
		  	   member using(user_no)
		 where
		       used_status ='N' 
		 <choose>
		 	<when test="condition == 'nickname'">
		 		and nickname
		 	</when> 
		 	<when test="condition == 'bookTitle'">
		 		and book_title
		 	</when>
		 	<otherwise>
		 		and used_content
		 	</otherwise>
		 </choose>     
		 		like '%' || #{keyword} || '%'
		 order
		    by
		       used_no desc
	</select>
	
	
	
	


</mapper>
