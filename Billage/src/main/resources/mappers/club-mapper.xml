<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
"-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="clubMapper">
	
	<resultMap type="club" id="clubResultSet">
		<result column="CLUB_NO"			 property="clubNo" />
		<result column="USER_NO"		 	 property="userNo" />
		<result column="CLUB_NAME"			 property="clubName" />
		<result column="CLUB_LIMIT"			 property="clubLimit" />
		<result column="CLUB_CREATEDATE"	 property="clubCreatedate" />
		<result column="CLUB_DISCRIPT"       property="clubDiscript" />
		<result column="USER_ID"         	 property="clubDiscript" />
		<result column="CLUB_LOCATION" 		 property="clubLocation" />
		<result column="CLUB_STATUS" 		 property="clubStatus" />
		<result column="CLUB_IMG" 			 property="clubImg" />
		<result column="PROFILE_IMG" 		 property="clubImg" />
		<result column="NEWCOUNT"			 property="newCount" />
		<result column="CLUB_COUNT"			 property="clubCount" />
		<result column="LIKECOUNT"			 property="likeCount" />
		<result column="MEMCOUNT"			 property="memCount" />
		<result column="enrollDate"			 property="enrollDate" />
		<result column="OPENCOUNT"			 property="openCount" />
		<result column="NICKNAME"   		 property="nickname" />
		<result column="LIKEUSER"			 property="likeUser" />
		<result column="MEMUSER"			 property="memUser" />
	</resultMap>
	
	<resultMap type="clubOpen" id="clubOpenResultSet">
		<result column="OPEN_NO" 			property="openNo" />
		<result column="CLUB_NO" 			property="clubNo" />
		<result column="OPEN_TITLE"		 	property="openTitle" />
		<result column="OPEN_LOCATION"		property="openLocation" />
		<result column="OPEN_DATE"			property="openDate" />
		<result column="OPEN_TIME" 			property="openTime" />
		<result column="OPEN_LIMIT" 		property="openLimit" />
		<result column="OPEN_STATUS" 		property="openStatus" />
		<result column="NICKNAME" 			property="nickname" />
		<result column="CLUB_NAME" 			property="clubName" />
		<result column="OPEN_MEM_COUNT" 	property="openMemCount" />
	</resultMap>
	
	<resultMap type="socket" id="socketResultSet">
		<result column="SOCKET_NO"			 property="socketNo" />
		<result column="USER_NO"			 property="userNo" />
		<result column="CLUB_NO"			 property="clubNo" />
		<result column="MESSAGE"			 property="message" />
		<result column="SOCKET_DATE"		 property="socketDate" />
		<result column="SOCKET_STATUS"		 property="socketStatus" />
		<result column="USER_ID"			 property="userId" />
		<result column="NICKNAME" 			 property="nickname" />
	</resultMap>


	<!-- 모임 페이지 리스트 종 갯수 조회  -->
	<select id="selectListCount" resultType="_int">
		SELECT 
				COUNT(*)
		  FROM
		  		CLUB
  		 WHERE
  		 		CLUB_STATUS = 'Y'
	</select>
	
	
	<!-- keyword / condition에 맞는 list 총 갯수 조회  -->
	<select id="searchCount" parameterType="java.util.HashMap" resultType="_int">
		SELECT 
				COUNT(*)
		  FROM
				CLUB C
		  JOIN
				MEMBER M ON(C.USER_NO = M.USER_NO)
	  	 WHERE
				CLUB_STATUS = 'Y'
		<if test="condition == 'clubName'">
			AND	CLUB_NAME
		</if>
		<if test="condition == 'location'">
			AND CLUB_LOCATION
		</if>
		<if test="condition == 'createMem'">
			AND NICKNAME
		</if>
			LIKE '%' || #{ keyword } || '%'
	</select>
	
	
	
	
		
	<!-- keyword / condition에 맞는 list 조회 
	<select id="selectSearchList" parameterType="java.util.HashMap" resultMap="clubResultSet">
		SELECT	
			   C.CLUB_NO, C.USER_NO, C.NICKNAME, C.CLUB_NAME, C.CLUB_LIMIT, C.CLUB_CREATEDATE, C.CLUB_DISCRIPT, C.CLUB_IMG, 
               C.CLUB_LOCATION, C.CLUB_COUNT, C.NEWCOUNT, C.LIKECOUNT, COUNT(CM.CLUB_NO) "MEMCOUNT"	
		 FROM
		 	   CLUB_MEMBER CM
 	    RIGHT
		 JOIN 	
				(SELECT	
					    C.CLUB_NO, C.USER_NO, C.NICKNAME, C.CLUB_NAME, C.CLUB_LIMIT, C.CLUB_CREATEDATE, C.CLUB_DISCRIPT, C.CLUB_IMG, 
					    C.CLUB_LOCATION, C.CLUB_COUNT, C.NEWCOUNT, COUNT(CL.CLUB_NO) "LIKECOUNT"
				 FROM
				 	    CLUB_LIKE CL 	
				 RIGHT
				  JOIN
					  (
					   SELECT 
							   CLUB_NO ,C.USER_NO ,M.NICKNAME  ,CLUB_NAME  ,CLUB_LIMIT
							  ,CLUB_CREATEDATE ,CLUB_DISCRIPT ,CLUB_IMG  ,CLUB_LOCATION ,CLUB_COUNT
				              ,CASE WHEN
				                         (SELECT TO_DATE(SYSDATE, 'YY-MM-DD') FROM DUAL) 
				                       - (SELECT TO_DATE(CLUB_CREATEDATE, 'YY-MM-DD') FROM DUAL) <![CDATA[ > ]]> 30 THEN 0
				                    WHEN
				                         (SELECT TO_DATE(SYSDATE, 'YY-MM-DD') FROM DUAL)
				                       - (SELECT TO_DATE(CLUB_CREATEDATE, 'YY-MM-DD') from dual) <![CDATA[ < ]]> 30 THEN 1
				                     END AS "NEWCOUNT"
					  	 FROM
					  	  	   CLUB C
					  	 LEFT 	   
				 	  	 JOIN
				 	  	  	   MEMBER M ON (C.USER_NO = M.USER_NO)
				  	    WHERE
				  	  	 	   CLUB_STATUS = 'Y'
		  	  	 	   <choose>
							<when test="condition == 'clubName'">
								AND	CLUB_NAME
							</when>
							<when test="condition == 'location'">
								AND CLUB_LOCATION
							</when>
							<otherwise>
								AND NICKNAME
							</otherwise>
		  	  	 	   </choose>
							LIKE '%' || #{ keyword } || '%'
						 ) C ON (C.CLUB_NO = CL.CLUB_NO)
				 GROUP
				    BY
					    C.CLUB_NO ,C.USER_NO  ,C.NICKNAME ,C.CLUB_NAME ,C.CLUB_LIMIT
					   ,C.CLUB_CREATEDATE ,C.CLUB_DISCRIPT ,C.CLUB_IMG ,C.CLUB_LOCATION
					   ,C.CLUB_COUNT ,C.NEWCOUNT) C ON (C.CLUB_NO = CM.CLUB_NO)
		 GROUP
		    BY
		       C.CLUB_NO, C.USER_NO, C.NICKNAME, C.CLUB_NAME, C.CLUB_LIMIT, C.CLUB_CREATEDATE
               ,C.CLUB_DISCRIPT, C.CLUB_IMG, C.CLUB_LOCATION, C.CLUB_COUNT, C.NEWCOUNT, C.LIKECOUNT	 	   
		 ORDER
		    BY
		       C.CLUB_NO DESC;
	</select>-->
	
	<!-- keyword / condition에 맞는 list 조회 -->
	<select id="selectSearchList" parameterType="java.util.HashMap" resultMap="clubResultSet">
		SELECT	
			   C.CLUB_NO
			  ,C.USER_NO
			  ,C.NICKNAME
		 	  ,C.CLUB_NAME
			  ,C.CLUB_LIMIT
			  ,C.CLUB_CREATEDATE
			  ,C.CLUB_DISCRIPT
			  ,C.CLUB_IMG
			  ,C.CLUB_LOCATION
			  ,C.CLUB_COUNT
			  ,C.NEWCOUNT
			  ,C.LIKECOUNT
			  ,COUNT(CM.CLUB_NO) "MEMCOUNT"	
		 FROM
		 	  CLUB_MEMBER CM
 	    RIGHT
		 JOIN 	
				(SELECT	
					   C.CLUB_NO
					  ,C.USER_NO
					  ,C.NICKNAME
				 	  ,C.CLUB_NAME
					  ,C.CLUB_LIMIT
					  ,C.CLUB_CREATEDATE
					  ,C.CLUB_DISCRIPT
					  ,C.CLUB_IMG
					  ,C.CLUB_LOCATION
					  ,C.CLUB_COUNT
					  ,C.NEWCOUNT
					  ,COUNT(CL.CLUB_NO) "LIKECOUNT"
				 FROM
				 	  CLUB_LIKE CL 	
				 RIGHT
				  JOIN
					  (
					   SELECT 
							   CLUB_NO
							  ,C.USER_NO
							  ,M.NICKNAME
						 	  ,CLUB_NAME
							  ,CLUB_LIMIT
							  ,CLUB_CREATEDATE
							  ,CLUB_DISCRIPT
							  ,CLUB_IMG
							  ,CLUB_LOCATION
							  ,CLUB_COUNT
				              ,CASE WHEN
				                         (SELECT TO_DATE(SYSDATE, 'YY-MM-DD') FROM DUAL) 
				                       - (SELECT TO_DATE(CLUB_CREATEDATE, 'YY-MM-DD') FROM DUAL) <![CDATA[ > ]]> 30 THEN 0
				                    WHEN
				                         (SELECT TO_DATE(SYSDATE, 'YY-MM-DD') FROM DUAL)
				                       - (SELECT TO_DATE(CLUB_CREATEDATE, 'YY-MM-DD') from dual) <![CDATA[ < ]]> 30 THEN 1
				                     END AS "NEWCOUNT"
					  	 FROM
					  	  	   CLUB C
					  	 LEFT 	   
				 	  	 JOIN
				 	  	  	   MEMBER M ON (C.USER_NO = M.USER_NO)
				  	    WHERE
				  	  	 	   CLUB_STATUS = 'Y'
		  	  	 	   <choose>
							<when test="condition == 'clubName'">
								AND	CLUB_NAME
							</when>
							<when test="condition == 'location'">
								AND CLUB_LOCATION
							</when>
							<otherwise>
								AND NICKNAME
							</otherwise>
		  	  	 	   </choose>
							LIKE '%' || #{ keyword } || '%'
						 ) C ON (C.CLUB_NO = CL.CLUB_NO)
				 GROUP
				    BY
					    C.CLUB_NO
					   ,C.USER_NO
					   ,C.NICKNAME
					   ,C.CLUB_NAME
					   ,C.CLUB_LIMIT
					   ,C.CLUB_CREATEDATE
					   ,C.CLUB_DISCRIPT
					   ,C.CLUB_IMG
					   ,C.CLUB_LOCATION
					   ,C.CLUB_COUNT	  	 	   
				  	   ,C.NEWCOUNT) C ON (C.CLUB_NO = CM.CLUB_NO)
		 GROUP
		    BY
		       C.CLUB_NO
			  ,C.USER_NO
			  ,C.NICKNAME
		 	  ,C.CLUB_NAME
			  ,C.CLUB_LIMIT
			  ,C.CLUB_CREATEDATE
			  ,C.CLUB_DISCRIPT
			  ,C.CLUB_IMG
			  ,C.CLUB_LOCATION
			  ,C.CLUB_COUNT
			  ,C.NEWCOUNT
			  ,C.LIKECOUNT	 	   
		 ORDER
		    BY
		       C.CLUB_NO DESC
	</select>
	
	<!-- 모임 리스트 페이지에 뿌려줄 정보  조회 -->
	<select id="selectList" parameterType="String" resultMap="clubResultSet">
		SELECT	
			   C.CLUB_NO
			  ,C.USER_NO
			  ,C.NICKNAME
		 	  ,C.CLUB_NAME
			  ,C.CLUB_LIMIT
			  ,C.CLUB_CREATEDATE
			  ,C.CLUB_DISCRIPT
			  ,C.CLUB_IMG
			  ,C.CLUB_LOCATION
			  ,C.CLUB_COUNT
			  ,C.NEWCOUNT
			  ,C.LIKECOUNT
			  ,COUNT(CM.CLUB_NO) "MEMCOUNT"	
		 FROM
		 	  CLUB_MEMBER CM
 	    RIGHT
		 JOIN 	
				(SELECT	
					   C.CLUB_NO
					  ,C.USER_NO
					  ,C.NICKNAME
				 	  ,C.CLUB_NAME
					  ,C.CLUB_LIMIT
					  ,C.CLUB_CREATEDATE
					  ,C.CLUB_DISCRIPT
					  ,C.CLUB_IMG
					  ,C.CLUB_LOCATION
					  ,C.CLUB_COUNT
					  ,C.NEWCOUNT
					  ,COUNT(CL.CLUB_NO) "LIKECOUNT"
				 FROM
				 	  CLUB_LIKE CL 	
				 RIGHT
				  JOIN
					  (
					   SELECT 
							   CLUB_NO
							  ,C.USER_NO
							  ,M.NICKNAME
						 	  ,CLUB_NAME
							  ,CLUB_LIMIT
							  ,CLUB_CREATEDATE
							  ,CLUB_DISCRIPT
							  ,CLUB_IMG
							  ,CLUB_LOCATION
							  ,CLUB_COUNT
				              ,CASE WHEN
				                         (SELECT TO_DATE(SYSDATE, 'YY-MM-DD') FROM DUAL) 
				                       - (SELECT TO_DATE(CLUB_CREATEDATE, 'YY-MM-DD') FROM DUAL) <![CDATA[ > ]]> 30 THEN 0
				                    WHEN
				                         (SELECT TO_DATE(SYSDATE, 'YY-MM-DD') FROM DUAL)
				                       - (SELECT TO_DATE(CLUB_CREATEDATE, 'YY-MM-DD') from dual) <![CDATA[ < ]]> 30 THEN 1
				                     END AS "NEWCOUNT"
					  	 FROM
					  	  	   CLUB C
					  	 LEFT 	   
				 	  	 JOIN
				 	  	  	   MEMBER M ON (C.USER_NO = M.USER_NO)
				  	    WHERE
				  	  	 	   CLUB_STATUS = 'Y') C ON (C.CLUB_NO = CL.CLUB_NO)
				 GROUP
				    BY
					    C.CLUB_NO
					   ,C.USER_NO
					   ,C.NICKNAME
					   ,C.CLUB_NAME
					   ,C.CLUB_LIMIT
					   ,C.CLUB_CREATEDATE
					   ,C.CLUB_DISCRIPT
					   ,C.CLUB_IMG
					   ,C.CLUB_LOCATION
					   ,C.CLUB_COUNT	  	 	   
				  	   ,C.NEWCOUNT) C ON (C.CLUB_NO = CM.CLUB_NO)
		 GROUP
		    BY
		       C.CLUB_NO
			  ,C.USER_NO
			  ,C.NICKNAME
		 	  ,C.CLUB_NAME
			  ,C.CLUB_LIMIT
			  ,C.CLUB_CREATEDATE
			  ,C.CLUB_DISCRIPT
			  ,C.CLUB_IMG
			  ,C.CLUB_LOCATION
			  ,C.CLUB_COUNT
			  ,C.NEWCOUNT
			  ,C.LIKECOUNT	 	   
		 ORDER
		    BY
		    <choose>
		      	<when test="condition == 'recently'">
		      	   C.CLUB_CREATEDATE DESC
		      	</when>
		      	<when test="condition == 'popularity'">
		      	   C.LIKECOUNT DESC
		      	</when>
			    <otherwise>
			       C.CLUB_NO DESC
			    </otherwise>
		    </choose>
	</select>

	
	<!-- 모임 생성 쿼리문  
		CLUB_CREATEDATE / CLUB_STATUS 컬럼 빼고 쓰니까 
		ORA-01747: invalid user.table.column, table.column, or column specification
		해당 오류 발생.. ㅠ 	
	 -->
	<insert id="insertClub" parameterType="club">
		INSERT
		  INTO 
		        CLUB
		       (
		        CLUB_NO,
		        USER_NO,
			    CLUB_NAME,
			    CLUB_LIMIT,
				CLUB_CREATEDATE,
				CLUB_DISCRIPT,
				CLUB_IMG,
				CLUB_LOCATION,
				CLUB_STATUS
		       )
	    VALUES 
			   (
			   SEQ_CNO.NEXTVAL
			  ,#{userNo}
			  ,#{clubName}
			  ,#{clubLimit}
			  ,SYSDATE
			  ,#{clubDiscript}
			  ,#{clubImg}
			  ,#{clubLocation}
			  ,'Y'
			   )
	</insert>
	
	
	<!-- 모임 INSERT가 잘 되었다면 모임 개설자 CLUB_MEMBER에 INSET해주기 -->
	<insert id="insertClubAdmin" parameterType="club">
	   <selectKey resultType="_int" keyProperty="clubNo" order="BEFORE" >
	   		SELECT  SEQ_CNO.CURRVAL FROM DUAL 
	   </selectKey>
		INSERT
		  INTO
		       CLUB_MEMBER
		       (
		       	CLUB_NO
		       ,USER_NO
		       ,ENROLL_DATE
		       )
        VALUES
			   (
			    #{ clubNo }
			   ,#{ userNo }
			   ,SYSDATE
			   )	
	</insert>


	<!-- Group List 조회수  -->
	<update id="increaseCount" parameterType="club">
		UPDATE 
				CLUB
		   SET
				CLUB_COUNT = ( CLUB_COUNT + 1 )
		 WHERE
		 		CLUB_NO = #{ clubNo }
		   AND
		   		CLUB_STATUS = 'Y'				
	</update>
	
	
	<!-- Club List Detail Select -->
	<select id="selectDetailClub" parameterType="club" resultMap="clubResultSet" >
		SELECT  
				 C.CLUB_NO
		        ,C.USER_NO
		        ,M.NICKNAME
		        ,C.CLUB_NAME
		        ,C.CLUB_LIMIT
		        ,C.CLUB_CREATEDATE
		        ,C.CLUB_DISCRIPT
		        ,C.CLUB_IMG
		        ,C.CLUB_LOCATION
		        ,C.CLUB_STATUS
		        ,C.CLUB_COUNT
		        ,CM.USER_NO "MEMUSER"
		        ,CM.ENROLL_DATE
		        ,CL.USER_NO "LIKEUSER"
		        ,(SELECT COUNT(*) FROM CLUB_LIKE WHERE CLUB_NO = ${ clubNo }) as "LIKECOUNT"
		        ,(SELECT COUNT(*) FROM CLUB_MEMBER WHERE CLUB_NO = ${ clubNo }) as "MEMCOUNT"
		  FROM 
		 		CLUB C
		  LEFT
		  JOIN
		       (
		         SELECT 
		         		 CM.USER_NO
		         		,CM.ENROLL_DATE 
	         	   FROM 
	         	         CLUB_MEMBER CM 
          		   WHERE	   
        	             CM.USER_NO = #{ userNo } 
        	             AND CM.CLUB_NO = #{ clubNo } 
														) CM ON (C.CLUB_NO = CLUB_NO)
		  LEFT
		  JOIN   
		        (
		          SELECT 
		          		  CL.USER_NO 
          		    FROM 
          		    	  CLUB_LIKE CL
          		   WHERE
          		   			   
        	             CL.USER_NO = #{ userNo } 
        	             AND CL.CLUB_NO = #{ clubNo } 
						   								) CL ON(C.CLUB_NO = CLUB_NO)
		  LEFT
		  JOIN  
		        MEMBER M ON(C.USER_NO = M.USER_NO)
		  WHERE
		         C.CLUB_NO = #{ clubNo }
		    AND 
				 C.CLUB_STATUS = 'Y'
	</select>
	
	
	<!-- selectDetailClubOpen -->
	<select id="selectDetailClubOpen" parameterType="club" resultMap="clubOpenResultSet">
		SELECT  
				 OPEN_NO
		        ,CLUB_NO
		        ,OPEN_TITLE
		        ,OPEN_LOCATION
		        ,OPEN_DATE
		        ,OPEN_TIME
		        ,OPEN_LIMIT
		        ,OPEN_STATUS
		  FROM 
		  		CLUB_OPEN
		 WHERE 
		 		CLUB_NO = #{ clubNo }
	</select>
	
		
	<!-- SELECT clubOpen에 참여하는 회원 조회 list  
	<select id="">
		SELECT M.USER_NO, M.USER_ID, M.NICKNAME, CLUB_NO, OPEN_NO
		FROM MEMBER M
		JOIN (
		        SELECT OM.USER_NO
		                ,OM.CLUB_NO
		                ,OM.OPEN_NO
		        FROM OPEN_MEMBER OM
		        LEFT
		        JOIN
		            CLUB_OPEN CO ON(OM.OPEN_NO = CO.OPEN_NO)
		        WHERE 
		            OM.CLUB_NO = #{ clubNo }
		        ) C ON (C.USER_NO = M.USER_NO)
		
		WHERE M.STATUS = 'N'
		AND OPEN_NO = #{ openNo };
	</select>
	-->
	

	<!-- Club General List Select -->
	<select id="clubGeneral" parameterType="_int" resultMap="clubResultSet">
		SELECT 
				C.CLUB_NO
			   ,C.USER_NO
			   ,C.CLUB_NAME
			   ,C.CLUB_IMG
			   ,C.CLUB_LOCATION
			   ,C.NEWCOUNT
			   ,C.ENROLL_DATE as "enrollDate"
			   ,COUNT(C.CLUB_NO) AS "MEMCOUNT"
		  FROM
		  		CLUB_MEMBER M 
	  	  JOIN	
			   (SELECT 
						C.CLUB_NO
					   ,C.USER_NO
					   ,CLUB_NAME
					   ,CLUB_IMG
					   ,CLUB_LOCATION
					   ,CASE WHEN
				                         (SELECT TO_DATE(SYSDATE, 'YY-MM-DD') FROM DUAL) 
				                       - (SELECT TO_DATE(CLUB_CREATEDATE, 'YY-MM-DD') FROM DUAL) <![CDATA[ > ]]> 30 THEN 0
				                    WHEN
				                         (SELECT TO_DATE(SYSDATE, 'YY-MM-DD') FROM DUAL)
				                       - (SELECT TO_DATE(CLUB_CREATEDATE, 'YY-MM-DD') from dual) <![CDATA[ < ]]> 30 THEN 1
				                     END AS "NEWCOUNT"
					   ,M.ENROLL_DATE
				  FROM 
				  		CLUB C
				  JOIN  
				  		CLUB_MEMBER M ON(C.CLUB_NO = M.CLUB_NO)
				 WHERE
				 		M.USER_NO = #{ userNo }) C ON (C.CLUB_NO = M.CLUB_NO)
		  GROUP
		     BY
		     	 C.CLUB_NO
		     	,C.USER_NO
		     	,CLUB_NAME
		     	,CLUB_IMG
		     	,CLUB_LOCATION
		     	,C.NEWCOUNT
		     	,C.ENROLL_DATE
	     ORDER
	        BY
	        	C.ENROLL_DATE DESC
	</select>
	
	
	<!--  update / delete resultType 필요없음  -->
	<delete id="ajaxDeleteClub" parameterType="club">
		DELETE
		  FROM  
		       CLUB_MEMBER
	     WHERE
	     	   CLUB_NO = #{ clubNo }
	       AND	   
		       USER_NO = #{ userNo }
	</delete>
	
	
	<delete id="ajaxDeleteClubs" parameterType="java.util.List">
		   DELETE
			 FROM  
			       CLUB_MEMBER
	       <where>
			<foreach item="club" index="index" separator="OR" collection="list" open="" close="" >
			     	   CLUB_NO = #{ club.clubNo }
			       AND	   
				       USER_NO = #{ club.userNo }	
			</foreach> 
	       </where>
	</delete>
	
	
	<!--  Insert Club Member -->
	<insert id="ajaxInsertClub" parameterType="club">
		INSERT
		  INTO
		       CLUB_MEMBER
		       (
		       	CLUB_NO
		       ,USER_NO
		       ,ENROLL_DATE
		       )
        VALUES
			   (
			    #{ clubNo }
			   ,#{ userNo }
			   ,SYSDATE
			   )
	</insert>
	
	
	<!-- 모임 관리자 모임 정보 SELECT 쿼리  -->
	<select id="clubAdmin" parameterType="_int" resultMap="clubResultSet">
		SELECT
	            C.CLUB_NO
	           ,C.USER_NO
	           ,C.CLUB_NAME
	           ,C.CLUB_LIMIT
	           ,TO_CHAR(C.CLUB_CREATEDATE, 'YYYY/MM/DD/HH:MI:SS') "CLUB_CREATEDATE"
	           ,C.CLUB_DISCRIPT
	           ,C.CLUB_IMG
	           ,C.CLUB_LOCATION
	           ,C.CLUB_STATUS
	           ,C.CLUB_COUNT
	           ,MEMCOUNT
	           ,LIKECOUNT
	           ,COUNT(CO.CLUB_NO) "OPENCOUNT"       
		 FROM 
		  		CLUB_OPEN CO      
		RIGHT
	   	 JOIN                 
     		   (
     		    SELECT  
			            C.CLUB_NO
			           ,C.USER_NO
			           ,C.CLUB_NAME
			           ,C.CLUB_LIMIT
			           ,C.CLUB_CREATEDATE
			           ,C.CLUB_DISCRIPT
			           ,C.CLUB_IMG
			           ,C.CLUB_LOCATION
			           ,C.CLUB_STATUS
			           ,C.CLUB_COUNT
			           ,MEMCOUNT
			           ,COUNT(CL.CLUB_NO) "LIKECOUNT"     
			      FROM 
			            CLUB_LIKE CL
			     RIGHT
			      JOIN                 
			           (
			            SELECT 
			            	    C.CLUB_NO
					           ,C.USER_NO
					           ,C.CLUB_NAME
					           ,C.CLUB_LIMIT
					           ,C.CLUB_CREATEDATE
					           ,C.CLUB_DISCRIPT
					           ,C.CLUB_IMG
					           ,C.CLUB_LOCATION
					           ,C.CLUB_STATUS
					           ,C.CLUB_COUNT
			            	   ,COUNT(CM.CLUB_NO) "MEMCOUNT"
			              FROM 
			              		CLUB C
			              LEFT
			              JOIN
			                    CLUB_MEMBER CM ON (C.CLUB_NO = CM.CLUB_NO)
			             GROUP
			                BY
			            	    C.CLUB_NO
					           ,C.USER_NO
					           ,C.CLUB_NAME
					           ,C.CLUB_LIMIT
					           ,C.CLUB_CREATEDATE
					           ,C.CLUB_DISCRIPT
					           ,C.CLUB_IMG
					           ,C.CLUB_LOCATION
					           ,C.CLUB_STATUS
					           ,C.CLUB_COUNT
			            HAVING 
			            		C.USER_NO = #{ userNo }
			               AND 
			               		C.CLUB_STATUS ='Y' ) C ON (C.CLUB_NO = CL.CLUB_NO)
			      GROUP
			         BY 
	            	    C.CLUB_NO
			           ,C.USER_NO
			           ,C.CLUB_NAME
			           ,C.CLUB_LIMIT
			           ,C.CLUB_CREATEDATE
			           ,C.CLUB_DISCRIPT
			           ,C.CLUB_IMG
			           ,C.CLUB_LOCATION
			           ,C.CLUB_STATUS
			           ,C.CLUB_COUNT
			           , MEMCOUNT) C ON(C.CLUB_NO = CO.CLUB_NO)
		GROUP 
		   BY 
	            C.CLUB_NO
	           ,C.USER_NO
	           ,C.CLUB_NAME
	           ,C.CLUB_LIMIT
	           ,C.CLUB_CREATEDATE
	           ,C.CLUB_DISCRIPT
	           ,C.CLUB_IMG
	           ,C.CLUB_LOCATION
	           ,C.CLUB_STATUS
	           ,C.CLUB_COUNT
	           ,MEMCOUNT
	           ,LIKECOUNT
		ORDER 
		   BY
		   	   C.CLUB_NO DESC
	</select>	
	
	
	<!-- Club_Member List Select -->
	<select id="clubMemberSelectAdmin" parameterType="_int" resultMap="clubResultSet">
		 SELECT 
		         CM.CLUB_NO
		        ,CM.USER_NO
		        ,M.USER_ID
		        ,M.NICKNAME
		        ,M.PROFILE_IMG
		        ,CM.ENROLL_DATE "enrollDate"
		  FROM
		        CLUB_MEMBER CM
		  JOIN
		        MEMBER M ON(M.USER_NO = CM.USER_NO)
		 WHERE
		        CM.CLUB_NO = #{ clubNo }
		   AND 
		   		M.STATUS = 'N'
		 ORDER 
		    BY 
		        CM.ENROLL_DATE DESC 
	</select>
	
	
	<!-- clubLikeResultset -->
	<select id="selectClubLike" parameterType="_int" resultMap="clubResultSet">
		SELECT 
		       CLUB_NO
	      FROM
	      	   CLUB_LIKE
	     WHERE 
	           USER_NO = #{ user_no }
	
	</select>
	
	<!-- Club Like Insert -->
	<insert id="clubLikeInsert" parameterType="club">
		INSERT 
		  INTO
		       CLUB_LIKE
		       (
		        CLUB_NO
		       ,USER_NO
		       )
        VALUES
        	   (
        	   #{clubNo}
        	  ,#{userNo}
        	   )
	</insert>
	
	
	<!-- Club Like delete -->
	<delete id="clubLikeDelete" parameterType="club">
		DELETE
		  FROM  
		       CLUB_LIKE
	     WHERE
	     	   CLUB_NO = #{ clubNo }
	       AND	   
		       USER_NO = #{ userNo }
	</delete>
	
	
	<!-- Club Like Count -->
	<select id="selectClubLikeCount" parameterType="club" resultType="_int">
		SELECT 
				COUNT(*) "LIKECOUNT"
		  FROM
				CLUB_LIKE
		  WHERE
				CLUB_NO = #{ clubNo }
	</select>
	
	
	<!--  ClubOpen Table Select List : Admin -->
	<select id="clubOpenSelectAdmin" parameterType="_int" resultMap="clubOpenResultSet" >
		SELECT
				C.CLUB_NO
		       ,C.USER_NO
		       ,C.NICKNAME
		       ,C.CLUB_NAME
		       ,C.OPEN_NO
		       ,C.OPEN_TITLE
		       ,C.OPEN_LOCATION
		       ,C.OPEN_DATE
		       ,C.OPEN_TIME
		       ,C.OPEN_LIMIT
		       ,C.OPEN_STATUS   
		       ,COUNT(OM.OPEN_NO) "OPEN_MEM_COUNT"
		  FROM
		        OPEN_MEMBER OM
		 RIGHT        
		  JOIN 
		        (
		        SELECT 
		        		 C.CLUB_NO
						,C.USER_NO
						,C.NICKNAME
						,C.CLUB_NAME
						,CO.OPEN_NO
						,CO.OPEN_TITLE
						,CO.OPEN_LOCATION
						,CO.OPEN_DATE
						,CO.OPEN_TIME
						,CO.OPEN_LIMIT
						,CO.OPEN_STATUS 
				  FROM
						CLUB_OPEN CO
				  JOIN
		                (
		                SELECT  
								 C.CLUB_NO
								,C.USER_NO
								,M.NICKNAME 
								,C.CLUB_NAME
						  FROM 
						  		CLUB C 
		                  JOIN 
		                  		MEMBER M ON (C.USER_NO = M.USER_NO)) C
		                ON( C.CLUB_NO = CO.CLUB_NO)) C 
				ON(C.OPEN_NO = OM.OPEN_NO)
		 GROUP
		    BY      
		    	C.CLUB_NO
		       ,C.USER_NO
		       ,C.NICKNAME
		       ,C.CLUB_NAME
		       ,C.OPEN_NO
		       ,C.OPEN_TITLE
		       ,C.OPEN_LOCATION
		       ,C.OPEN_DATE
		       ,C.OPEN_TIME
		       ,C.OPEN_LIMIT
		       ,C.OPEN_STATUS
		HAVING
				C.CLUB_NO = #{ clubNo }            
		 ORDER 
		    BY    
				C.OPEN_NO DESC
	</select>
	
	
	<!-- ClubOpen Form Insert -->
	<insert id="insertClubOpen" parameterType="clubOpen">
		INSERT
		  INTO
		  		CLUB_OPEN
		  		(
	  			 OPEN_NO
				,CLUB_NO
				,OPEN_TITLE
				,OPEN_LOCATION
				,OPEN_DATE
				,OPEN_TIME
				,OPEN_LIMIT
				,OPEN_STATUS
		  		)
		VALUES
				(
				 SEQ_ONO.NEXTVAL
				,#{ clubNo }
				,#{ openTitle }
				,#{ openLocation }
				,#{ openDate }
				,#{ openTime }
				,#{ openLimit }
				,'Y'
				)	
	</insert>
	
	
	<!-- ajaxInsertOpenMem -->
	<insert id="ajaxInsertOpenMem" parameterType="clubOpen">
		INSERT 
		  INTO
		  		OPEN_MEMBER
		  		(
		  		 USER_NO
				,CLUB_NO
				,OPEN_NO
		  		)
 		VALUES
 				(
 				 #{ userNo }
 				,#{ clubNo }
 				,#{ openNo }
 				)
	</insert>
	
	
	<!-- selectOpenMemNum -->
	<select id="selectOpenMemNum" parameterType="clubOpen" resultType="_int">
		SELECT 
				COUNT(*)"OPEN_MEM_COUNT"
		  FROM 
		  		OPEN_MEMBER
  		 WHERE
				CLUB_NO = #{ clubNo }
		   AND 
		   		OPEN_NO = #{ openNo }
	</select>
	
	
	<!-- insert Chat -->
	<insert id="insertChat" parameterType="java.util.HashMap" >
		INSERT
		  INTO
		  		SOCKET
		  		(
		  		 SOCKET_NO
				,USER_NO
				,CLUB_NO
				,MESSAGE
				,SOCKET_DATE
				,SOCKET_STATUS
		  		)
		VALUES 
				(
				 SEQ_SOCNO.NEXTVAL
				,#{ userNo }
				,#{ clubNo }
				,#{ message }
				,SYSDATE
				,'N'
				)
	</insert>


	<select id="selectChat" parameterType="_int" resultMap="socketResultSet">
		SELECT  
				 S.USER_NO
				,M.USER_ID
				,M.NICKNAME
				,MESSAGE
		  FROM
		        SOCKET S
		  JOIN
		        MEMBER M ON(S.USER_NO = M.USER_NO)
		 WHERE 
		        CLUB_NO = #{ clubNo }
		 ORDER
		    BY
		        SOCKET_DATE
	</select>
	
	
	
</mapper>
























